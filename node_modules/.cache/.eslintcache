[{"/Users/shiromadaiki/github/todo_frontend/src/index.js":"1","/Users/shiromadaiki/github/todo_frontend/src/App.js":"2","/Users/shiromadaiki/github/todo_frontend/src/components/AddTodo.jsx":"3","/Users/shiromadaiki/github/todo_frontend/src/components/TodoList.jsx":"4","/Users/shiromadaiki/github/todo_frontend/src/Register.jsx":"5","/Users/shiromadaiki/github/todo_frontend/src/Login.jsx":"6","/Users/shiromadaiki/github/todo_frontend/src/Home.jsx":"7","/Users/shiromadaiki/github/todo_frontend/src/NotFound.jsx":"8","/Users/shiromadaiki/github/todo_frontend/src/HeaderMenu.jsx":"9"},{"size":259,"mtime":1675318520373,"results":"10","hashOfConfig":"11"},{"size":897,"mtime":1676952014656,"results":"12","hashOfConfig":"11"},{"size":2846,"mtime":1676894734850,"results":"13","hashOfConfig":"11"},{"size":3929,"mtime":1676894744919,"results":"14","hashOfConfig":"11"},{"size":324,"mtime":1676950826248,"results":"15","hashOfConfig":"11"},{"size":320,"mtime":1676950912411,"results":"16","hashOfConfig":"11"},{"size":483,"mtime":1676955508362,"results":"17","hashOfConfig":"11"},{"size":273,"mtime":1676951198739,"results":"18","hashOfConfig":"11"},{"size":1011,"mtime":1676955547436,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"8mxcw7",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"23"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/shiromadaiki/github/todo_frontend/src/index.js",[],[],[],"/Users/shiromadaiki/github/todo_frontend/src/App.js",["51","52"],[],"import { BrowserRouter, Link, Routes, Route } from \"react-router-dom\";\nimport  Home  from \"./Home\";\nimport  Register  from \"./Register\";\nimport  Login from \"./Login\";\nimport NotFound from \"./NotFound\";\nimport './css/App.css';\nimport styled from 'styled-components'\n// import AddTodo from './components/AddTodo'\n// import TodoList from './components/TodoList'\n\n// const Wrapper = styled.div`\n//   width: 700px;\n//   max-width: 85%;\n//   margin: 20px auto;\n// `\n\n\n\nfunction App() {\n\n  return (\n    <>\n     <BrowserRouter>\n      <Routes>\n        <Route path={`/`} element={<Home />} />\n        <Route path=\"/Register\" element={<Register />} />\n        <Route path=\"/Login\" element={<Login />} />\n        <Route path={`/*/`} element={<NotFound />} />\n      </Routes>\n    </BrowserRouter>\n\n     {/* <Wrapper>\n       <AddTodo /> \n       <TodoList /> \n    </Wrapper> */}\n    </>\n\t)\n}\n\nexport default App;","/Users/shiromadaiki/github/todo_frontend/src/components/AddTodo.jsx",["53","54"],[],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { TextInput } from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { Modal, Button, Group, Text } from '@mantine/core';\n\nfunction AddTodo() {\n  const [todos, setTodos] = useState([]);\n  const [todoName, setTodoName] = useState(\"\");\n  const [opened, { close, open }] = useDisclosure(false);\n  \n  const Button_div  =styled.div`\n  display:flex;\n`;\n\n  const getTodos = () => {\n    return axios\n     // .get(\"http://localhost:3000/todos\")\n     .get(\"https://wispy-wind-1056.fly.dev/todos\")\n      .then((res) => {\n        if (res !== ''){\n          setTodos(res.data);\n        }\n      })\n      .catch(() => console.error);\n  };\n\n  const createTodo = (e) => {\n  \n    if (todoName!==''){\n     axios\n     //.post(\"http://localhost:3000/todos\", {\n      .post(\"https://wispy-wind-1056.fly.dev/todos\", {\n       name: todoName,\n       complete: false,\n     })\n     .then(() => {\n       setTodoName(\"\");\n     })\n     .catch(() => console.error);\n    }\n    else{\n     alert(\"入力欄が空です\");\n    }\n    return;\n };\n\n const ClearDoneTask=()=>{\n    // axios.delete(`http://localhost:3000/todos/destroy_doneTask`)\n     axios.delete(`https://wispy-wind-1056.fly.dev/todos/destroy_doneTask`)\n     .then(()=> {\n      \n     })\n     .catch(e => {\n       console.log(e)\n    })\n \n};\n\nconst deleteAllTodo=()=>{\n   let res=window.confirm(\"TODOリストを全て削除しますか？\");\n    if (res) {\n      //axios.delete(`http://localhost:3000/todos/destroy_all`)\n      axios.delete(`https://wispy-wind-1056.fly.dev/todos/destroy_all`)\n      .then(()=> {\n        setTodos([])\n      })\n      .catch(e => {\n        console.log(e)\n     })\n  }\n};\n\nuseEffect(() => {\n  getTodos();\n}, []);\n\n  return (\n    <>\n      <h1>Add New Todo</h1>\n      <>\n          <TextInput\n            placeholder=\"Task name\"\n            type=\"text\"\n            value={todoName}\n            onChange={(e) => setTodoName(e.target.value)}\n          />\n        \n      <Button_div >\n       <Button type=\"submit\" onClick={(e) => createTodo(e)}>\n          ADD\n        </Button>\n        \n       <Modal opened={opened} onClose={close} size=\"auto\" title=\"Select Button!!\">\n        <Text>Delete only <b>Done Task?</b> or <b>All Task?</b></Text>\n         <Group mt=\"xl\">\n          <Button variant=\"outline\" type=\"submit\"   onClick={() => ClearDoneTask()}>\n            Clear Done Task\n          </Button>\n          <Button variant=\"outline\" type=\"submit\"  color=\"red\"  onClick={() => deleteAllTodo()}>\n            Delete All Task\n          </Button>\n        </Group>\n       </Modal>\n\n       <Group position=\"left\" >\n        <Button color=\"red\" onClick={open}>Delete</Button>\n       </Group>\n      </Button_div>\n\n      </>\n    </>\n  )\n}\n\nexport default AddTodo","/Users/shiromadaiki/github/todo_frontend/src/components/TodoList.jsx",["55","56","57","58","59","60","61","62","63"],[],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\nimport { Checkbox } from '@mantine/core';\nimport { CloseButton } from '@mantine/core';\nimport { List } from '@mantine/core';\nimport { Popover, Button, TextInput } from '@mantine/core';\n\nconst Task_ul  =styled.ul`\n  \n`;\n\nconst Task_li  =styled.li`\n\nlist-style:none;\nfont-size:25px;\ndisplay:flex;\n`;\n\nconst TaskName_div = styled.div`\n  width:450px;\n \n`;\n\nconst TaskName = styled.p`\n width:100%;\n word-wrap: break-word;\n`;\n\n\nconst Button_li = styled.li`\n  list-style:none;\n  padding-top:20px;\n \n`;\n\nconst Checkbox_div = styled.div`\n  padding-left:30px;\n  padding-top:13px;\n`;\n\nconst Edit_div=styled.div`\n  \n`;\n\nconst CloseButton_div=styled.div`\n\n`;\n\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);  \n  const [todoName, setTodoName] = useState(\"\");\n\n  const getTodos = () => {\n    return axios\n      // .get(\"http://localhost:3000/todos\")\n      .get(\"https://wispy-wind-1056.fly.dev/todos\")\n      .then((res) => {\n        if (res !== ''){\n          setTodos(res.data);\n        }\n      })\n      .catch(() => console.error);\n  };\n\n  const toggleComplete = async (id, index) => {\n    const complete = todos[index].complete;\n    // await axios.put(`http://localhost:3000/todos/${id}`, {\n       await axios.put(`https://wispy-wind-1056.fly.dev/todos/${id}`, {\n      complete: !complete,\n    });\n    getTodos();\n  };\n\n  const editTaskName = async (e,id) => {\n    // await axios.put(`http://localhost:3000/todos/${id}`, {\n       await axios.put(`https://wispy-wind-1056.fly.dev/todos/${id}`, {\n      name: todoName\n    });\n    getTodos();\n  };\n\n\n  const deleteTodo = async(todoId,index) => {\n\n    const complete = todos[index].complete;\n\n    //await axios.put(`http://localhost:3000/todos/${todoId}`, {\n      await axios.put(`https://wispy-wind-1056.fly.dev/todos/${todoId}`, {\n      complete: !complete\n    });\n\n    //axios.delete(`http://localhost:3000/todos/${todoId}`)\n    axios.delete(`https://wispy-wind-1056.fly.dev/todos/${todoId}`)\n      .then(() => \n      getTodos()\n      )\n      .catch(console.error());\n\n  };\n\n\n  useEffect(() => \n  {getTodos();}, [todos]);\n  \n\n  return (\n    <>\n      <h1>Your Todo List</h1>\n      <Task_ul>\n      {todos.map((todo, index) => (\n        <List size=\"xl\">\n        <List.Item> \n        <Task_li index={index}>\n           \n          <TaskName_div> \n            <TaskName>{todo.complete ? <s>{todo.name}</s>: todo.name}\n            </TaskName>\n          </TaskName_div>\n\n          <Button_li>\n          <Edit_div style={{display: todo.complete?  \"none\":\"block\" }} >\n            <Popover width={300} trapFocus position=\"bottom\" withArrow shadow=\"md\">\n              <Popover.Target>\n                <Button size=\"xs\" color=\"dark\">Edit</Button>\n               </Popover.Target>\n             <Popover.Dropdown >\n               <TextInput label=\"New task name\" placeholder=\"\" size=\"xs\" \n               type=\"text\"\n               value={todoName}\n               onChange={(e) => setTodoName(e.target.value)}/>\n                <Button size=\"xs\" color=\"dark\" type=\"submit\" onClick={(e) => editTaskName(e,todo.id)}>Change</Button>\n             </Popover.Dropdown>\n            </Popover>\n          </Edit_div>\n          </Button_li>\n         \n          <Button_li>\n            <Checkbox_div>\n             <Checkbox  checked={todo.complete ? true: false} onClick={() => toggleComplete(todo.id, index)}/>\n            </Checkbox_div>\n          </Button_li>\n\n          <Button_li>\n            <CloseButton_div style={{display: todo.complete?  \"none\":\"block\" }}>\n             <CloseButton  onClick={() => deleteTodo(todo.id, index)} title=\"Close popover\" size=\"xl\" iconSize={15} color=\"red\" />\n            </CloseButton_div>\n          </Button_li>\n          \n        </Task_li>\n        </List.Item>\n           </List>\n      ))}\n    </Task_ul>\n\n    </>\n  )\n}\n\nexport default TodoList","/Users/shiromadaiki/github/todo_frontend/src/Register.jsx",[],[],"/Users/shiromadaiki/github/todo_frontend/src/Login.jsx",[],[],"/Users/shiromadaiki/github/todo_frontend/src/Home.jsx",["64"],[],"/Users/shiromadaiki/github/todo_frontend/src/NotFound.jsx",[],[],"/Users/shiromadaiki/github/todo_frontend/src/HeaderMenu.jsx",["65","66","67","68","69","70"],[],{"ruleId":"71","severity":1,"message":"72","line":1,"column":25,"nodeType":"73","messageId":"74","endLine":1,"endColumn":29},{"ruleId":"71","severity":1,"message":"75","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":14},{"ruleId":"71","severity":1,"message":"76","line":9,"column":10,"nodeType":"73","messageId":"74","endLine":9,"endColumn":15},{"ruleId":"77","severity":1,"message":"78","line":90,"column":7,"nodeType":"79","messageId":"80","endLine":90,"endColumn":20},{"ruleId":"77","severity":1,"message":"81","line":111,"column":7,"nodeType":"79","messageId":"80","endLine":111,"endColumn":16},{"ruleId":"77","severity":1,"message":"82","line":115,"column":9,"nodeType":"79","messageId":"80","endLine":115,"endColumn":32},{"ruleId":"77","severity":1,"message":"83","line":117,"column":11,"nodeType":"79","messageId":"80","endLine":117,"endColumn":25},{"ruleId":"77","severity":1,"message":"84","line":122,"column":11,"nodeType":"79","messageId":"80","endLine":122,"endColumn":22},{"ruleId":"77","severity":1,"message":"85","line":123,"column":11,"nodeType":"79","messageId":"80","endLine":123,"endColumn":73},{"ruleId":"77","severity":1,"message":"84","line":139,"column":11,"nodeType":"79","messageId":"80","endLine":139,"endColumn":22},{"ruleId":"77","severity":1,"message":"86","line":140,"column":13,"nodeType":"79","messageId":"80","endLine":140,"endColumn":27},{"ruleId":"77","severity":1,"message":"84","line":145,"column":11,"nodeType":"79","messageId":"80","endLine":145,"endColumn":22},{"ruleId":"77","severity":1,"message":"87","line":146,"column":13,"nodeType":"79","messageId":"80","endLine":146,"endColumn":81},{"ruleId":"71","severity":1,"message":"72","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":14},{"ruleId":"77","severity":1,"message":"88","line":33,"column":9,"nodeType":"79","messageId":"80","endLine":33,"endColumn":24},{"ruleId":"77","severity":1,"message":"89","line":35,"column":11,"nodeType":"79","messageId":"80","endLine":35,"endColumn":26},{"ruleId":"77","severity":1,"message":"90","line":36,"column":13,"nodeType":"79","messageId":"80","endLine":36,"endColumn":31},{"ruleId":"77","severity":1,"message":"91","line":41,"column":9,"nodeType":"79","messageId":"80","endLine":41,"endColumn":26},{"ruleId":"77","severity":1,"message":"92","line":42,"column":11,"nodeType":"79","messageId":"80","endLine":42,"endColumn":31},{"ruleId":"77","severity":1,"message":"92","line":46,"column":11,"nodeType":"79","messageId":"80","endLine":46,"endColumn":31},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'styled' is defined but never used.","'todos' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Button_div must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Task_ul must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Task_li must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component TaskName_div must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Button_li must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Edit_div must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Checkbox_div must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component CloseButton_div must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component HeaderMenu_ul must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component HeaderMenu_li must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component HeaderMenu_title must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component HeaderMenu_user must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component HeaderMenu_li_user must be in PascalCase or SCREAMING_SNAKE_CASE"]
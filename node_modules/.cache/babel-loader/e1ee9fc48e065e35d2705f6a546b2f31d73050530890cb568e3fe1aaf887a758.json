{"ast":null,"code":"var _jsxFileName = \"/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/TodoHeader.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { TaskButtonItem } from \"./components/Atoms/TaskButtonItem\";\nimport { TaskButtonList } from \"./components/Atoms/TaskButtonList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoHeader() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  // useStateを追加\n  const [todoName, setTodoName] = useState(\"\");\n  const getTodos = () => {\n    return axios.get(\"http://localhost:3000/todos\").then(res => {\n      if (res !== '') {\n        setTodos(res.data);\n      }\n    }).catch(() => console.error);\n  };\n  const createTodo = e => {\n    if (todoName !== '') {\n      axios.post(\"http://localhost:3000/todos\", {\n        name: todoName,\n        complete: false\n      }).then(() => {\n        setTodoName(\"\");\n        getTodos();\n      }).catch(() => console.error);\n    } else {\n      alert(\"入力欄が空です\");\n    }\n    return;\n  };\n  const AlldeleteTodo = () => {\n    const clearTodoList = [todos];\n    const len = todos.length;\n    let res = window.confirm(\"TODOリストを全て削除しますか？\");\n    if (res) {\n      for (let i = 0; i < len; i++) {\n        axios.delete(`http://localhost:3000/todos/${todos[i].id}`);\n        clearTodoList.splice(i, 1);\n      }\n      setTodos(clearTodoList);\n    }\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todoName,\n        onChange: e => setTodoName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => createTodo(e),\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => AlldeleteTodo(),\n        children: \"\\u4E00\\u62EC\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TodoHeader, \"pZ8wH07nQcfSBJix77kjPptBxLg=\");\n_c = TodoHeader;\nexport default TodoHeader;\nvar _c;\n$RefreshReg$(_c, \"TodoHeader\");","map":{"version":3,"names":["useState","useEffect","axios","TaskButtonItem","TaskButtonList","TodoHeader","todos","setTodos","todoName","setTodoName","getTodos","get","then","res","data","catch","console","error","createTodo","e","post","name","complete","alert","AlldeleteTodo","clearTodoList","len","length","window","confirm","i","delete","id","splice","target","value"],"sources":["/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/TodoHeader.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport { TaskButtonItem } from \"./components/Atoms/TaskButtonItem\";\nimport { TaskButtonList } from \"./components/Atoms/TaskButtonList\";\n\nfunction TodoHeader() {\n    const [todos, setTodos] = useState([]);\n  // useStateを追加\n      const [todoName, setTodoName] = useState(\"\");\n  \n    const getTodos = () => {\n      return axios\n        .get(\"http://localhost:3000/todos\")\n        .then((res) => {\n          if (res !== ''){\n            setTodos(res.data);\n          }\n        })\n  \n        .catch(() => console.error);\n    };\n      const createTodo = (e) => {\n  \n       if (todoName!==''){\n        axios\n        .post(\"http://localhost:3000/todos\", {\n          name: todoName,\n          complete: false,\n        })\n        .then(() => {\n          setTodoName(\"\");\n          getTodos();\n        })\n        .catch(() => console.error);\n       }\n       else{\n        alert(\"入力欄が空です\");\n       }\n        \n        return;\n    };\n    \n    const AlldeleteTodo=()=>{\n      const clearTodoList = [todos];\n      const len =todos.length;\n      let res=window.confirm(\"TODOリストを全て削除しますか？\");\n     \n     if (res){\n      for (let i = 0; i < len; i++){\n       axios.delete(`http://localhost:3000/todos/${todos[i].id}`)\n  \n       clearTodoList.splice(i, 1);\n      }\n      setTodos(clearTodoList);\n     }\n  \n    };\n  \n  \n      useEffect(() => {\n      getTodos();\n    }, []);\n  \n    return (\n      <>\n      <div>\n        <input\n          type=\"text\"\n          value={todoName}\n          onChange={(e) => setTodoName(e.target.value)}\n        />\n        <button type=\"submit\" onClick={(e) => createTodo(e)}>\n          追加\n        </button>\n        <button type=\"submit\" onClick={() => AlldeleteTodo()}>\n          一括削除\n        </button>\n      </div>\n      </>\n      )\n  }\n  \n  export default TodoHeader;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,mCAAmC;AAClE,SAASC,cAAc,QAAQ,mCAAmC;AAAC;AAAA;AAEnE,SAASC,UAAU,GAAG;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC;EACI,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,QAAQ,GAAG,MAAM;IACrB,OAAOR,KAAK,CACTS,GAAG,CAAC,6BAA6B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,KAAK,EAAE,EAAC;QACbN,QAAQ,CAACM,GAAG,CAACC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,CAEDC,KAAK,CAAC,MAAMC,OAAO,CAACC,KAAK,CAAC;EAC/B,CAAC;EACC,MAAMC,UAAU,GAAIC,CAAC,IAAK;IAEzB,IAAIX,QAAQ,KAAG,EAAE,EAAC;MACjBN,KAAK,CACJkB,IAAI,CAAC,6BAA6B,EAAE;QACnCC,IAAI,EAAEb,QAAQ;QACdc,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDV,IAAI,CAAC,MAAM;QACVH,WAAW,CAAC,EAAE,CAAC;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDK,KAAK,CAAC,MAAMC,OAAO,CAACC,KAAK,CAAC;IAC5B,CAAC,MACG;MACHM,KAAK,CAAC,SAAS,CAAC;IACjB;IAEC;EACJ,CAAC;EAED,MAAMC,aAAa,GAAC,MAAI;IACtB,MAAMC,aAAa,GAAG,CAACnB,KAAK,CAAC;IAC7B,MAAMoB,GAAG,GAAEpB,KAAK,CAACqB,MAAM;IACvB,IAAId,GAAG,GAACe,MAAM,CAACC,OAAO,CAAC,mBAAmB,CAAC;IAE5C,IAAIhB,GAAG,EAAC;MACP,KAAK,IAAIiB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,EAAEI,CAAC,EAAE,EAAC;QAC5B5B,KAAK,CAAC6B,MAAM,CAAE,+BAA8BzB,KAAK,CAACwB,CAAC,CAAC,CAACE,EAAG,EAAC,CAAC;QAE1DP,aAAa,CAACQ,MAAM,CAACH,CAAC,EAAE,CAAC,CAAC;MAC3B;MACAvB,QAAQ,CAACkB,aAAa,CAAC;IACxB;EAED,CAAC;EAGCxB,SAAS,CAAC,MAAM;IAChBS,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAA,uBACA;MAAA,wBACE;QACE,IAAI,EAAC,MAAM;QACX,KAAK,EAAEF,QAAS;QAChB,QAAQ,EAAGW,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACe,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eACF;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAGhB,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;QAAA,UAAC;MAErD;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAE,MAAMK,aAAa,EAAG;QAAA,UAAC;MAEtD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EACL,iBACH;AAEP;AAAC,GA3EMnB,UAAU;AAAA,KAAVA,UAAU;AA6EjB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
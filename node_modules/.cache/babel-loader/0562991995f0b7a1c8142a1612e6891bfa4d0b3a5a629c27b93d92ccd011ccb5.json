{"ast":null,"code":"var _jsxFileName = \"/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { TodoHeader } from \"./TodoHeader.js\";\nimport { TaskButtonItem } from \"./components/Atoms/TaskButtonItem\";\nimport { TaskButtonList } from \"./components/Atoms/TaskButtonList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const getTodos = () => {\n    return axios.get(\"http://localhost:3000/todos\").then(res => {\n      if (res !== '') {\n        setTodos(res.data);\n      }\n    }).catch(() => console.error);\n  };\n  const deleteTodo = todoId => {\n    return axios.delete(`http://localhost:3000/todos/${todoId}`).then(() => getTodos()).catch(console.error());\n  };\n  const toggleComplete = async (id, index) => {\n    const complete = todos[index].complete;\n    await axios.put(`http://localhost:3000/todos/${id}`, {\n      complete: !complete\n    });\n    getTodos();\n  };\n  const createTodo = e => {\n    if (todoName !== '') {\n      axios.post(\"http://localhost:3000/todos\", {\n        name: todoName,\n        complete: false\n      }).then(() => {\n        setTodoName(\"\");\n        getTodos();\n      }).catch(() => console.error);\n    } else {\n      alert(\"入力欄が空です\");\n    }\n    return;\n  };\n  const AlldeleteTodo = () => {\n    const clearTodoList = [todos];\n    const len = todos.length;\n    let res = window.confirm(\"TODOリストを全て削除しますか？\");\n    if (res) {\n      for (let i = 0; i < len; i++) {\n        axios.delete(`http://localhost:3000/todos/${todos[i].id}`);\n        clearTodoList.splice(i, 1);\n      }\n      setTodos(clearTodoList);\n    }\n  };\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todoName,\n        onChange: e => setTodoName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: e => createTodo(e),\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: () => AlldeleteTodo(),\n        children: \"\\u4E00\\u62EC\\u524A\\u9664\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TaskButtonList, {\n        index: index,\n        children: [todo.complete ? /*#__PURE__*/_jsxDEV(\"s\", {\n          children: todo.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 28\n        }, this) : todo.name, /*#__PURE__*/_jsxDEV(TaskButtonItem, {\n          ButtonName: \"\\u5B8C\\u4E86\",\n          onClick: () => toggleComplete(todo.id, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TaskButtonItem, {\n          ButtonName: \"\\u524A\\u9664\",\n          onClick: () => deleteTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","TodoHeader","TaskButtonItem","TaskButtonList","App","todos","setTodos","getTodos","get","then","res","data","catch","console","error","deleteTodo","todoId","delete","toggleComplete","id","index","complete","put","createTodo","e","todoName","post","name","setTodoName","alert","AlldeleteTodo","clearTodoList","len","length","window","confirm","i","splice","target","value","map","todo"],"sources":["/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/App.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport {TodoHeader} from \"./TodoHeader.js\";\nimport { TaskButtonItem } from \"./components/Atoms/TaskButtonItem\";\nimport { TaskButtonList } from \"./components/Atoms/TaskButtonList\";\n\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n\n\n  const getTodos = () => {\n    return axios\n      .get(\"http://localhost:3000/todos\")\n      .then((res) => {\n        if (res !== ''){\n          setTodos(res.data);\n        }\n      })\n\n      \n      .catch(() => console.error);\n  };\n\n\n  const deleteTodo = (todoId) => {\n    return axios\n      .delete(`http://localhost:3000/todos/${todoId}`)\n      .then(() => getTodos())\n      .catch(console.error());\n  };\n\n  const toggleComplete = async (id, index) => {\n    const complete = todos[index].complete;\n    await axios.put(`http://localhost:3000/todos/${id}`, {\n      complete: !complete,\n    });\n    getTodos();\n  };\n\n  const createTodo = (e) => {\n  \n    if (todoName!==''){\n     axios\n     .post(\"http://localhost:3000/todos\", {\n       name: todoName,\n       complete: false,\n     })\n     .then(() => {\n       setTodoName(\"\");\n       getTodos();\n     })\n     .catch(() => console.error);\n    }\n    else{\n     alert(\"入力欄が空です\");\n    }\n     return;\n };\n \n const AlldeleteTodo=()=>{\n   const clearTodoList = [todos];\n   const len =todos.length;\n   let res=window.confirm(\"TODOリストを全て削除しますか？\");\n  \n  if (res){\n   for (let i = 0; i < len; i++){\n    axios.delete(`http://localhost:3000/todos/${todos[i].id}`)\n\n    clearTodoList.splice(i, 1);\n   }\n   setTodos(clearTodoList);\n  }\n\n };\n\n\n\tuseEffect(() => {\n    getTodos();\n  }, []);\n\n  return (\n    <>\n    <div>\n        <input\n          type=\"text\"\n          value={todoName}\n          onChange={(e) => setTodoName(e.target.value)}\n        />\n        <button type=\"submit\" onClick={(e) => createTodo(e)}>\n          追加\n        </button>\n        <button type=\"submit\" onClick={() => AlldeleteTodo()}>\n          一括削除\n        </button>\n      </div>\n\n    \n\t\t<ul>\n\t\t  {todos.map((todo, index) => (\n\t\t    <TaskButtonList index={index}>\n          {todo.complete ? <s>{todo.name}</s> : todo.name}\n\t\t\t\t\t<TaskButtonItem  ButtonName=\"完了\"  onClick={() => toggleComplete(todo.id, index)}/>\n\n          <TaskButtonItem ButtonName=\"削除\"  onClick={() => deleteTodo(todo.id)}/>\n\n        </TaskButtonList>\n\t\t  ))}\n\t\t</ul>\n    </>\n\t)\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
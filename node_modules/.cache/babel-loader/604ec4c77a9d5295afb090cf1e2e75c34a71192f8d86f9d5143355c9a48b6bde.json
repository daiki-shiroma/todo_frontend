{"ast":null,"code":"var _jsxFileName = \"/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/components/Atoms/TaskButtonItem.jsx\";\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { Button } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst [todos, setTodos] = useState([]);\nconst [todoName, setTodoName] = useState(\"\");\nconst getTodos = () => {\n  return axios.get(\"http://localhost:3000/todos\").then(res => {\n    if (res !== '') {\n      setTodos(res.data);\n    }\n  }).catch(() => console.error);\n};\nconst createTodo = e => {\n  if (todoName !== '') {\n    axios.post(\"http://localhost:3000/todos\", {\n      name: todoName,\n      complete: false\n    }).then(() => {\n      setTodoName(\"\");\n      getTodos();\n    }).catch(() => console.error);\n  } else {\n    alert(\"入力欄が空です\");\n  }\n  return;\n};\nexport const TaskButtonItem = props => {\n  const {\n    ButtonName\n  } = props;\n  const Button_li = styled.li`\n  list-style:none;\n  padding-right:10px;\n`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: todoName,\n      onChange: e => setTodoName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button_li, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        size: \"xs\",\n        type: \"submit\",\n        onClick: e => createTodo(e),\n        children: ButtonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = TaskButtonItem;\nvar _c;\n$RefreshReg$(_c, \"TaskButtonItem\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","Button","todos","setTodos","todoName","setTodoName","getTodos","get","then","res","data","catch","console","error","createTodo","e","post","name","complete","alert","TaskButtonItem","props","ButtonName","Button_li","li","target","value"],"sources":["/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/components/Atoms/TaskButtonItem.jsx"],"sourcesContent":["import React from 'react'\nimport { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport { Button } from '@mantine/core';\n\nconst [todos, setTodos] = useState([]);\nconst [todoName, setTodoName] = useState(\"\");\n\nconst getTodos = () => {\n  return axios\n    .get(\"http://localhost:3000/todos\")\n    .then((res) => {\n      if (res !== ''){\n        setTodos(res.data);\n      }\n    })\n    .catch(() => console.error);\n};\n\nconst createTodo = (e) => {\n  if (todoName!==''){\n   axios\n   .post(\"http://localhost:3000/todos\", {\n     name: todoName,\n     complete: false,\n   })\n   .then(() => {\n     setTodoName(\"\");\n     getTodos();\n   })\n   .catch(() => console.error);\n  }\n  else{\n   alert(\"入力欄が空です\");\n  }\n   return;\n};\n\n\nexport const TaskButtonItem = (props) => {\n  const { ButtonName } = props;\n\n  const Button_li = styled.li`\n  list-style:none;\n  padding-right:10px;\n`;\n\n\n  return (\n  <>\n    <input\n          type=\"text\"\n          value={todoName}\n          onChange={(e) => setTodoName(e.target.value)}\n        />\n    <Button_li>\n      <Button size=\"xs\" type=\"submit\"　onClick={(e) => createTodo(e)}>{ButtonName}</Button>\n    </Button_li>\n  </>\n  )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AAAC;AAAA;AAEvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;AACtC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;AAE5C,MAAMS,QAAQ,GAAG,MAAM;EACrB,OAAOP,KAAK,CACTQ,GAAG,CAAC,6BAA6B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAK;IACb,IAAIA,GAAG,KAAK,EAAE,EAAC;MACbN,QAAQ,CAACM,GAAG,CAACC,IAAI,CAAC;IACpB;EACF,CAAC,CAAC,CACDC,KAAK,CAAC,MAAMC,OAAO,CAACC,KAAK,CAAC;AAC/B,CAAC;AAED,MAAMC,UAAU,GAAIC,CAAC,IAAK;EACxB,IAAIX,QAAQ,KAAG,EAAE,EAAC;IACjBL,KAAK,CACJiB,IAAI,CAAC,6BAA6B,EAAE;MACnCC,IAAI,EAAEb,QAAQ;MACdc,QAAQ,EAAE;IACZ,CAAC,CAAC,CACDV,IAAI,CAAC,MAAM;MACVH,WAAW,CAAC,EAAE,CAAC;MACfC,QAAQ,EAAE;IACZ,CAAC,CAAC,CACDK,KAAK,CAAC,MAAMC,OAAO,CAACC,KAAK,CAAC;EAC5B,CAAC,MACG;IACHM,KAAK,CAAC,SAAS,CAAC;EACjB;EACC;AACH,CAAC;AAGD,OAAO,MAAMC,cAAc,GAAIC,KAAK,IAAK;EACvC,MAAM;IAAEC;EAAW,CAAC,GAAGD,KAAK;EAE5B,MAAME,SAAS,GAAGvB,MAAM,CAACwB,EAAG;AAC9B;AACA;AACA,CAAC;EAGC,oBACA;IAAA,wBACE;MACM,IAAI,EAAC,MAAM;MACX,KAAK,EAAEpB,QAAS;MAChB,QAAQ,EAAGW,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACU,MAAM,CAACC,KAAK;IAAE;MAAA;MAAA;MAAA;IAAA,QAC7C,eACN,QAAC,SAAS;MAAA,uBACR,QAAC,MAAM;QAAC,IAAI,EAAC,IAAI;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAGX,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;QAAA,UAAEO;MAAU;QAAA;QAAA;QAAA;MAAA;IAAU;MAAA;MAAA;MAAA;IAAA,QAC1E;EAAA,gBACX;AAEL,CAAC;AAAA,KArBYF,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
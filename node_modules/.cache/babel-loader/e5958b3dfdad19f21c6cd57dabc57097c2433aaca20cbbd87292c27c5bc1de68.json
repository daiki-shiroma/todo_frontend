{"ast":null,"code":"var _jsxFileName = \"/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/AddTodo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\n//import { Button } from '@mantine/core';\nimport { TextInput } from '@mantine/core';\nimport { useDisclosure, useCounter } from '@mantine/hooks';\nimport { Modal, Button, Group, Text, Badge } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AddTodo() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [todoName, setTodoName] = useState(\"\");\n  const [opened, {\n    close,\n    open\n  }] = useDisclosure(false);\n  const Input_Button_div = styled.div`\n  // display:flex;\n`;\n  const Input_div = styled.div`\n  width:60%;\n`;\n  const Button_div = styled.div`\n  display:flex;\n`;\n  const getTodos = () => {\n    return axios.get(\"http://localhost:3000/todos\").then(res => {\n      if (res !== '') {\n        setTodos(res.data);\n      }\n    }).catch(() => console.error);\n  };\n  const createTodo = e => {\n    if (todoName !== '') {\n      axios.post(\"http://localhost:3000/todos\", {\n        name: todoName,\n        complete: false\n      }).then(() => {\n        setTodoName(\"\");\n        getTodos();\n      }).catch(() => console.error);\n      setTodos([...todos, {\n        todo: todoName,\n        complete: false\n      }]);\n      getTodos();\n    } else {\n      alert(\"入力欄が空です\");\n    }\n    return;\n  };\n  const ClearDoneTask = () => {\n    axios.delete(`http://localhost:3000/todos/destroy_doneTask`).then(() => {\n      setTodos([]);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  const deleteAllTodo = () => {\n    //let res=window.confirm(\"TODOリストを全て削除しますか？\");\n    // if (res) {\n    axios.delete(`http://localhost:3000/todos/destroy_all`).then(() => {\n      setTodos([]);\n    }).catch(e => {\n      console.log(e);\n    });\n    // }\n  };\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Add New Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TextInput, {\n        placeholder: \"Task name\",\n        type: \"text\",\n        value: todoName,\n        onChange: e => setTodoName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button_div, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          onClick: e => createTodo(e),\n          children: \"ADD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Modal, {\n          opened: opened,\n          onClose: close,\n          size: \"auto\",\n          title: \"Select Button!!\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            children: \"Delete only Done Task? or All Task?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Group, {\n            mt: \"xl\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              type: \"submit\",\n              onClick: () => ClearDoneTask(),\n              children: \"Clear Done Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              type: \"submit\",\n              color: \"red\",\n              onClick: () => deleteAllTodo(),\n              children: \"Delete All Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Group, {\n          position: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"red\",\n            onClick: open,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(AddTodo, \"FsMYmwDfVYbY0qL9d31KV51iE5I=\", false, function () {\n  return [useDisclosure];\n});\n_c = AddTodo;\nexport default AddTodo;\nvar _c;\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"names":["React","useState","useEffect","axios","styled","TextInput","useDisclosure","useCounter","Modal","Button","Group","Text","Badge","AddTodo","todos","setTodos","todoName","setTodoName","opened","close","open","Input_Button_div","div","Input_div","Button_div","getTodos","get","then","res","data","catch","console","error","createTodo","e","post","name","complete","todo","alert","ClearDoneTask","delete","log","deleteAllTodo","target","value"],"sources":["/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/AddTodo.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport styled from 'styled-components'\n//import { Button } from '@mantine/core';\nimport { TextInput } from '@mantine/core';\nimport { useDisclosure, useCounter } from '@mantine/hooks';\nimport { Modal, Button, Group, Text, Badge } from '@mantine/core';\n\n\nfunction AddTodo() {\n  const [todos, setTodos] = useState([]);\n  const [todoName, setTodoName] = useState(\"\");\n  const [opened, { close, open }] = useDisclosure(false);\n  \n  const Input_Button_div  =styled.div`\n  // display:flex;\n`;\n\n\n  const Input_div  =styled.div`\n  width:60%;\n`;\n\n  const Button_div  =styled.div`\n  display:flex;\n`;\n\n  const getTodos = () => {\n    return axios\n      .get(\"http://localhost:3000/todos\")\n      .then((res) => {\n        if (res !== ''){\n          setTodos(res.data);\n        }\n      })\n      .catch(() => console.error);\n  };\n\n  const createTodo = (e) => {\n  \n    if (todoName!==''){\n     axios\n     .post(\"http://localhost:3000/todos\", {\n       name: todoName,\n       complete: false,\n     })\n     .then(() => {\n       setTodoName(\"\");\n       getTodos();\n     })\n     .catch(() => console.error);\n\n     setTodos([...todos, { todo: todoName, complete:false }]);\n     getTodos();\n    }\n    else{\n     alert(\"入力欄が空です\");\n    }\n    return;\n };\n\n const ClearDoneTask=()=>{\n     axios.delete(`http://localhost:3000/todos/destroy_doneTask`)\n     .then(()=> {\n       setTodos([])\n     })\n     .catch(e => {\n       console.log(e)\n    })\n \n};\n\nconst deleteAllTodo=()=>{\n   //let res=window.confirm(\"TODOリストを全て削除しますか？\");\n   // if (res) {\n      axios.delete(`http://localhost:3000/todos/destroy_all`)\n      .then(()=> {\n        setTodos([])\n      })\n      .catch(e => {\n        console.log(e)\n     })\n // }\n};\n\n\nuseEffect(() => {\n  getTodos();\n}, []);\n\n\n  return (\n    <>\n      <h1>Add New Todo</h1>\n      <>\n        {/* <Input_div> */}\n          <TextInput\n            placeholder=\"Task name\"\n            type=\"text\"\n            value={todoName}\n            onChange={(e) => setTodoName(e.target.value)}\n          />\n        {/* </Input_div> */}\n        \n      <Button_div >\n       <Button type=\"submit\" onClick={(e) => createTodo(e)}>\n          ADD\n        </Button>\n        {/* <Button type=\"submit\"  color=\"red\"  onClick={() => deleteAllTodo()}>\n          Delete\n        </Button> */}\n\n       <Modal opened={opened} onClose={close} size=\"auto\" title=\"Select Button!!\">\n        <Text>Delete only Done Task? or All Task?</Text>\n        <Group mt=\"xl\">\n          <Button variant=\"outline\" type=\"submit\"   onClick={() => ClearDoneTask()}>\n            Clear Done Task\n          </Button>\n          <Button variant=\"outline\" type=\"submit\"  color=\"red\"  onClick={() => deleteAllTodo()}>\n            Delete All Task\n          </Button>\n        </Group>\n       </Modal>\n\n       <Group position=\"left\" >\n        <Button color=\"red\" onClick={open}>Delete</Button>\n       </Group>\n\n      </Button_div>\n        \n        \n      </>\n    </>\n  )\n}\n\nexport default AddTodo"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC;AACA,SAASC,SAAS,QAAQ,eAAe;AACzC,SAASC,aAAa,EAAEC,UAAU,QAAQ,gBAAgB;AAC1D,SAASC,KAAK,EAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,QAAQ,eAAe;AAAC;AAAA;AAGlE,SAASC,OAAO,GAAG;EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACiB,MAAM,EAAE;IAAEC,KAAK;IAAEC;EAAK,CAAC,CAAC,GAAGd,aAAa,CAAC,KAAK,CAAC;EAEtD,MAAMe,gBAAgB,GAAGjB,MAAM,CAACkB,GAAI;AACtC;AACA,CAAC;EAGC,MAAMC,SAAS,GAAGnB,MAAM,CAACkB,GAAI;AAC/B;AACA,CAAC;EAEC,MAAME,UAAU,GAAGpB,MAAM,CAACkB,GAAI;AAChC;AACA,CAAC;EAEC,MAAMG,QAAQ,GAAG,MAAM;IACrB,OAAOtB,KAAK,CACTuB,GAAG,CAAC,6BAA6B,CAAC,CAClCC,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,KAAK,EAAE,EAAC;QACbb,QAAQ,CAACa,GAAG,CAACC,IAAI,CAAC;MACpB;IACF,CAAC,CAAC,CACDC,KAAK,CAAC,MAAMC,OAAO,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,UAAU,GAAIC,CAAC,IAAK;IAExB,IAAIlB,QAAQ,KAAG,EAAE,EAAC;MACjBb,KAAK,CACJgC,IAAI,CAAC,6BAA6B,EAAE;QACnCC,IAAI,EAAEpB,QAAQ;QACdqB,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDV,IAAI,CAAC,MAAM;QACVV,WAAW,CAAC,EAAE,CAAC;QACfQ,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDK,KAAK,CAAC,MAAMC,OAAO,CAACC,KAAK,CAAC;MAE3BjB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAEwB,IAAI,EAAEtB,QAAQ;QAAEqB,QAAQ,EAAC;MAAM,CAAC,CAAC,CAAC;MACxDZ,QAAQ,EAAE;IACX,CAAC,MACG;MACHc,KAAK,CAAC,SAAS,CAAC;IACjB;IACA;EACH,CAAC;EAED,MAAMC,aAAa,GAAC,MAAI;IACpBrC,KAAK,CAACsC,MAAM,CAAE,8CAA6C,CAAC,CAC3Dd,IAAI,CAAC,MAAK;MACTZ,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,CACDe,KAAK,CAACI,CAAC,IAAI;MACVH,OAAO,CAACW,GAAG,CAACR,CAAC,CAAC;IACjB,CAAC,CAAC;EAEN,CAAC;EAED,MAAMS,aAAa,GAAC,MAAI;IACrB;IACA;IACGxC,KAAK,CAACsC,MAAM,CAAE,yCAAwC,CAAC,CACtDd,IAAI,CAAC,MAAK;MACTZ,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,CACDe,KAAK,CAACI,CAAC,IAAI;MACVH,OAAO,CAACW,GAAG,CAACR,CAAC,CAAC;IACjB,CAAC,CAAC;IACN;EACD,CAAC;;EAGDhC,SAAS,CAAC,MAAM;IACduB,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAGJ,oBACE;IAAA,wBACE;MAAA,UAAI;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,eACrB;MAAA,wBAEI,QAAC,SAAS;QACR,WAAW,EAAC,WAAW;QACvB,IAAI,EAAC,MAAM;QACX,KAAK,EAAET,QAAS;QAChB,QAAQ,EAAGkB,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACU,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAC7C,eAGN,QAAC,UAAU;QAAA,wBACV,QAAC,MAAM;UAAC,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAGX,CAAC,IAAKD,UAAU,CAACC,CAAC,CAAE;UAAA,UAAC;QAEpD;UAAA;UAAA;UAAA;QAAA,QAAS,eAKV,QAAC,KAAK;UAAC,MAAM,EAAEhB,MAAO;UAAC,OAAO,EAAEC,KAAM;UAAC,IAAI,EAAC,MAAM;UAAC,KAAK,EAAC,iBAAiB;UAAA,wBACzE,QAAC,IAAI;YAAA,UAAC;UAAmC;YAAA;YAAA;YAAA;UAAA,QAAO,eAChD,QAAC,KAAK;YAAC,EAAE,EAAC,IAAI;YAAA,wBACZ,QAAC,MAAM;cAAC,OAAO,EAAC,SAAS;cAAC,IAAI,EAAC,QAAQ;cAAG,OAAO,EAAE,MAAMqB,aAAa,EAAG;cAAA,UAAC;YAE1E;cAAA;cAAA;cAAA;YAAA,QAAS,eACT,QAAC,MAAM;cAAC,OAAO,EAAC,SAAS;cAAC,IAAI,EAAC,QAAQ;cAAE,KAAK,EAAC,KAAK;cAAE,OAAO,EAAE,MAAMG,aAAa,EAAG;cAAA,UAAC;YAEtF;cAAA;cAAA;cAAA;YAAA,QAAS;UAAA;YAAA;YAAA;YAAA;UAAA,QACH;QAAA;UAAA;UAAA;UAAA;QAAA,QACD,eAER,QAAC,KAAK;UAAC,QAAQ,EAAC,MAAM;UAAA,uBACrB,QAAC,MAAM;YAAC,KAAK,EAAC,KAAK;YAAC,OAAO,EAAEvB,IAAK;YAAA,UAAC;UAAM;YAAA;YAAA;YAAA;UAAA;QAAS;UAAA;UAAA;UAAA;QAAA,QAC3C;MAAA;QAAA;QAAA;QAAA;MAAA,QAEI;IAAA,gBAGV;EAAA,gBACF;AAEP;AAAC,GA7HQP,OAAO;EAAA,QAGoBP,aAAa;AAAA;AAAA,KAHxCO,OAAO;AA+HhB,eAAeA,OAAO;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
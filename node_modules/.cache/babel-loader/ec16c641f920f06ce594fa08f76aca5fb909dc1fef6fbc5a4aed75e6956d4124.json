{"ast":null,"code":"var _jsxFileName = \"/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/components/Atoms/TaskButtonItem.jsx\";\nimport React from 'react';\nimport styled from \"styled-components\";\nimport { Button } from '@mantine/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskButtonItem = props => {\n  const {\n    ButtonName\n  } = props;\n  const createTodo = e => {\n    if (todoName !== '') {\n      axios.post(\"http://localhost:3000/todos\", {\n        name: todoName,\n        complete: false\n      }).then(() => {\n        setTodoName(\"\");\n        getTodos();\n      }).catch(() => console.error);\n    } else {\n      alert(\"入力欄が空です\");\n    }\n    return;\n  };\n  const Button_li = styled.li`\n  list-style:none;\n  padding-right:10px;\n`;\n  return /*#__PURE__*/_jsxDEV(Button_li, {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      size: \"xs\",\n      type: \"submit\",\n      children: ButtonName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskButtonItem;\nvar _c;\n$RefreshReg$(_c, \"TaskButtonItem\");","map":{"version":3,"names":["React","styled","Button","TaskButtonItem","props","ButtonName","createTodo","e","todoName","axios","post","name","complete","then","setTodoName","getTodos","catch","console","error","alert","Button_li","li"],"sources":["/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/components/Atoms/TaskButtonItem.jsx"],"sourcesContent":["import React from 'react'\nimport styled from \"styled-components\";\nimport { Button } from '@mantine/core';\n\n\nexport const TaskButtonItem = (props) => {\n  const { ButtonName } = props;\n\n  const createTodo = (e) => {\n    if (todoName!==''){\n     axios\n     .post(\"http://localhost:3000/todos\", {\n       name: todoName,\n       complete: false,\n     })\n     .then(() => {\n       setTodoName(\"\");\n       getTodos();\n     })\n     .catch(() => console.error);\n    }\n    else{\n     alert(\"入力欄が空です\");\n    }\n     return;\n };\n\n  const Button_li = styled.li`\n  list-style:none;\n  padding-right:10px;\n`;\n\n\n  return (\n    <Button_li>\n      <Button size=\"xs\" type=\"submit\">{ButtonName}</Button>\n    </Button_li>\n\n  )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,QAAQ,eAAe;AAAC;AAGvC,OAAO,MAAMC,cAAc,GAAIC,KAAK,IAAK;EACvC,MAAM;IAAEC;EAAW,CAAC,GAAGD,KAAK;EAE5B,MAAME,UAAU,GAAIC,CAAC,IAAK;IACxB,IAAIC,QAAQ,KAAG,EAAE,EAAC;MACjBC,KAAK,CACJC,IAAI,CAAC,6BAA6B,EAAE;QACnCC,IAAI,EAAEH,QAAQ;QACdI,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;QACVC,WAAW,CAAC,EAAE,CAAC;QACfC,QAAQ,EAAE;MACZ,CAAC,CAAC,CACDC,KAAK,CAAC,MAAMC,OAAO,CAACC,KAAK,CAAC;IAC5B,CAAC,MACG;MACHC,KAAK,CAAC,SAAS,CAAC;IACjB;IACC;EACJ,CAAC;EAEA,MAAMC,SAAS,GAAGnB,MAAM,CAACoB,EAAG;AAC9B;AACA;AACA,CAAC;EAGC,oBACE,QAAC,SAAS;IAAA,uBACR,QAAC,MAAM;MAAC,IAAI,EAAC,IAAI;MAAC,IAAI,EAAC,QAAQ;MAAA,UAAEhB;IAAU;MAAA;MAAA;MAAA;IAAA;EAAU;IAAA;IAAA;IAAA;EAAA,QAC3C;AAGhB,CAAC;AAAA,KAlCYF,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/App.js\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport './css/App.css';\nimport styled from 'styled-components';\nimport AddTodo from './AddTodo';\nimport TodoList from './TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 700px;\n  max-width: 85%;\n  margin: 20px auto;\n`;\n_c = Wrapper;\nfunction App() {\n  //   const [todos, setTodos] = useState([]);\n\n  //   const getTodos = () => {\n  //     return axios\n  //       .get(\"http://localhost:3000/todos\")\n  //       .then((res) => {\n  //         if (res !== ''){\n  //           setTodos(res.data);\n  //         }\n  //       })\n  //       .catch(() => console.error);\n  //   };\n\n  //  const deleteAllTodo=()=>{\n  //    const clearTodoList = [todos];\n  //    const len =todos.length;\n  //    let res=window.confirm(\"TODOリストを全て削除しますか？\");\n\n  //   if (res){\n  //    for (let i = 0; i < len; i++){\n  //     axios\n  //     .delete(`http://localhost:3000/todos/${todos[i].id}`)\n  //     .then (()=>console.log(\"noproblem\"))\n  //     .catch(() => console.error);\n\n  //     clearTodoList.splice(i, 1);\n\n  //    }\n  //    setTodos([]);\n  //   }\n  //  };\n\n  //  useEffect(() => {\n  //   getTodos();\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: [/*#__PURE__*/_jsxDEV(AddTodo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","styled","AddTodo","TodoList","Wrapper","div","App"],"sources":["/Users/shiromadaiki/Documents/react_lessons/todo_frontend/src/App.js"],"sourcesContent":["import { useState,useEffect } from \"react\";\nimport axios from \"axios\";\nimport './css/App.css';\nimport styled from 'styled-components'\nimport AddTodo from './AddTodo'\nimport TodoList from './TodoList'\n\nconst Wrapper = styled.div`\n  width: 700px;\n  max-width: 85%;\n  margin: 20px auto;\n`\n\nfunction App() {\n//   const [todos, setTodos] = useState([]);\n\n//   const getTodos = () => {\n//     return axios\n//       .get(\"http://localhost:3000/todos\")\n//       .then((res) => {\n//         if (res !== ''){\n//           setTodos(res.data);\n//         }\n//       })\n//       .catch(() => console.error);\n//   };\n\n//  const deleteAllTodo=()=>{\n//    const clearTodoList = [todos];\n//    const len =todos.length;\n//    let res=window.confirm(\"TODOリストを全て削除しますか？\");\n  \n//   if (res){\n//    for (let i = 0; i < len; i++){\n//     axios\n//     .delete(`http://localhost:3000/todos/${todos[i].id}`)\n//     .then (()=>console.log(\"noproblem\"))\n//     .catch(() => console.error);\n\n//     clearTodoList.splice(i, 1);\n\n//    }\n//    setTodos([]);\n//   }\n//  };\n\n//  useEffect(() => {\n//   getTodos();\n// }, []);\n\n  return (\n    <>\n     <Wrapper>\n       <AddTodo /> \n       <TodoList /> \n    </Wrapper>\n    </>\n\t)\n}\n\nexport default App;"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAA;AAAA;AAEjC,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;AAC3B;AACA;AACA;AACA,CAAC;AAAA,KAJKD,OAAO;AAMb,SAASE,GAAG,GAAG;EACf;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEE,oBACE;IAAA,uBACC,QAAC,OAAO;MAAA,wBACN,QAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACX,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EACL,iBACP;AAEP;AAAC,MA7CQA,GAAG;AA+CZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}